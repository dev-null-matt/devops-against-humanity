# Description:
#   Generates a devops against humanity pair form http://devopsagainsthumanity.com
#   A first editorial pass was made at the crowd-sourced cards. YMMV.
#
# Dependencies:
#   None
#
# Configuration:
#   HUBOT_HIPCHAT_TOKEN
#
# Commands:
#   hubot devops card me - Returns a random devops against humanity card pair.
#   hubot devops start game - Starts a new devops agains humanity game
#   hubot devops join - Joins an existing game
#   hubot devops who is the dealer - Mentions the dealer
#   hubot devops black card - Displays a black card, setting it for the round if you're the dealer
#   hubot devops play card <n> <m> <o> - Plays cards from your hand
#   hubot devops reveal cards - Reveals all the card combinations
#   hubot devops <n> won - Announces the winner of the round
#
# Author:
#   KevinBehrens

Util = require "util"

black_cards = [
  "__________ logs or it didn't happen."
  "__________, for some values of __________."
  "Ask Me Anything about __________."
  "Called on account of __________."
  "Disrupting the established players in __________ via __________."
  "Doge __________."
  "Employees must __________ before returning to work."
  "Enterprise __________ in the cloud."
  "Enterprise-ready __________."
  "Epic yak-shave caused by __________."
  "Facebook has acquired __________ for $10b and __________."
  "Free as in __________."
  "Glitter-bombed with __________."
  "Hi, I'm Troy McClure. You may remember me from such commit messages as __________ and __________."
  "How is __________ even formed?"
  "I can haz __________."
  "Tinder for __________"
  "I saw the best minds of my generation __________."
  "If __________ is the answer, you are asking the wrong question."
  "If you're using __________, you're gonna have a bad time."
  "Nobody ever got fired for buying __________."
  "Running Windows in production leads to __________."
  "The Internet is for cat memes and __________."
  "Our release schedule doesn't have time for __________."
  "The Internet of Things will be controlled by __________."
  "The only thing necessary for evil to triumph is __________."
  "Uber is on surge pricing because of __________."
  "WARN: __________ has been deprecated."
  "Will merge pull requests for __________."
  "Zero-day __________."
  "Time to schedule the postmortem for __________."
  "__________ - the idiots guide to __________ and __________."
  "Put some __________ on it!"
  "Wrap it with the __________ duct tape."
  "But Google is using __________ so we should too!"
  "__________ is the new __________."
  "Etsy says we should __________ everything."
  "xkcd.com just made a hilarious comic making fun of __________."
  "This isn't going to be all unicorns and __________."
  "Apple just patented __________."
  "When I was a kid we didn't have __________."
  "__________ is a nice idea, lets found a start-up."
  "DevOps: Now with 100% more __________!"
  "Main benefits of automation: __________ and __________."
  "Chef converge failed due to __________."
  "Then there was the time I found __________ on the root partition."
  "We run production on __________ and __________."
  "Management said it's OK to deploy __________ at 5pm on Friday."
  "Did you know that we have __________ on pager rotation?"
  "There was no good solution for __________, so we built our own using __________."
  "Amazon built a data enter on the moon to lessen the risk of __________ causing problems."
  "In order to improve security, we're upgrading to __________."
  "The two pillars of our Continuous Deployment pipeline are __________ and __________."
  "I got paged at 3am because of __________."
  "The most stable part of our infrastructure? __________. For sure."
  "When I told Jez Humble about our __________, he actually cried."
  "When I write a book about my experiences, it'll be called \"__________, the good parts\"."
  "Restoring from backups failed due to __________."
  "My two most indispensable tools are __________ and __________."
  "The production data center burned down because of __________."
  "It turns out that the button labeled \"Don't Push\" actually does __________."
  "You should think of your servers like __________ and not like __________."
  "I find Java to be way too __________."
  "It's like trying to herd __________."
  "I ended up having to buy a replacement __________ on eBay."
  "__________ is more memory than anyone will ever need on a computer."
  "__________ Driven Development."
  "The RIAA is suing me for downloading __________."
  "Security? We've got that! We use __________."
  "sudo pip install __________"
  "When I hooked the 3D printer up to the Internet, it accidentally created __________."
  "My next blog post will be about how we used __________ to create __________."
  "So, I was using Wireshark to check network traffic... Did you know we have __________ in production?"
  "My eyes started bleeding when I opened the editor and saw __________."
  "I think maybe I'll leave __________ off my resum√©."
  "We don't need __________ - we have __________ !"
  "Management just told me I need to get certified in __________."
  "Our app is like __________, but for __________."
  "Marketing says we're leaders in the __________ space, but I think it's more accurate to say we specialize in __________."
  "Our greatest achievement in the last year is __________."
  "I write my code in vim because of __________."
  "If we make this deadline, management has promised us __________."
  "Sweet! I just found a Puppet module for __________!"
  "Last week, I created a Chef recipe for __________; this week, it's an entire cookbook for __________, Automation FTW!"
  "We really need to open-source our __________."
  "A sales rep just tried to pitch me on __________; I told them we already have __________."
  "Who would have known that __________ could destroy an entire datacenter?"
  "sudo apt-get install __________"
  "Our production backups are stored using __________."
  "We replaced our __________ with __________."
  "After __________ came up, the retrospective really went downhill."
  "You know what our app needs? More __________, and less __________."
  "It figures - an article about our __________ was posted just as we're pivoting to __________."
  "In the next planning session, we'll cover __________ and __________."
  "Our competitive advantage is our __________."
  "Every time someone brings up __________, I throw up a little in my mouth."
  "Continuous __________."
  "All that we had to do to halve our response times was implement __________."
  "Our entire app is geared towards providing __________."
  "__________-ility"
  "We just achieved __________s per second!"
  "__________ is that even HA?"
  "My LinkedIn endorsements include __________."
  "__________ just endorsed me for __________ on LinkedIn"
  "Users are __________."
  "Robots are going to make __________ obsolete."
  "Accidental __________."
  "An error occurred: __________"
  "According to the logs, __________ was initially caused by __________."
  "We can just fix that with a little __________."
  "You can have __________, __________, or __________.  Pick two."
  "A monad is just a __________ in the category of __________, what's the problem?"
  "Functional programming - if you can't __________ it, __________ it."
  "On a scale from 1 to 10, this is __________!"
  "We don't need configuration management, we have __________!"
  "__________, now with __________ support."
  "RedHat has announced that RHEL 8 will ship with __________."
  "Hey, __________ is down. Can you fix it?"
  "I grabbed __________ on my way out the door after our paychecks bounced and management stopped answering their phones."
  "Did you try __________ yet?"
  "I was 6 beers in when I got the pager alert that __________ was down."
  "Notice: Building __________ for __________"
  "I laughed when they said I'd be on call 24/7 but wouldn't receive a stipend for __________."
  "If it weren't for __________ we'd all be __________."
  "__________, __________ and just a few lines of Perl."
  "NoSQL is superior to SQL because __________"
  "Script kiddies got into __________ because __________."
  "__________ is better than Hadoop because __________."
  "Rub a little __________ on it."
  "WAIT, YOU DELETED __________??!"
  "@__________borat"
  "It's not web scale, it's __________."
  "The tech support hotline told me to __________."
  "Asynchronous REST API calls are the solution to __________."
  "Say concurrent threads again and I will __________ you."
  "Guys, seriously, if we just use __________ it will solve all our problems with __________!"
  "Facebook changed their profiles today because __________."
  "github.com/__________/__________"
  "Hello. My name is __________ and I am addicted to __________ ."
  "__________ dependency hell."
  "That talk outline said it would be about __________, but it ended up being more like __________."
  "I will replace you with a very small __________."
  "Jordan Sissel hates __________ so much that he created a new opensource project called __________ to work around it."
  "__________ isn't a job title."
  "For the next project we are going to use __________ to solve __________."
  "My editor of choice is __________."
  "__________ it; ship it."
  "__________-Stack Developer"
  "__________SQL"
  "It has been __ days since the last __________"
  "The __________ on the server were deleted because __________."
  "This week, Aphyr runs __________ through jepsen."
  "The intern just ran __________ on the load balancer."
  "I need you to do a __________ with __________ before __________."
  "Lambdas are just a lame implementation of __________."
  "C-x; C-__________"
  "This users wants __________ because __________."
  "__________ should be deprecated in favour of __________."
  "__________ mismatch between __________ and __________."
  "I put __________ on the scripts to make it run faster."
  "Developers do not get access to production machines, because of __________."
  "Developers need access to production machines because __________."
  "We run __________ in a cron job every 15 minutes."
  "The client says it needs more __________ ."
  "We're a __________ as a Service company."
  "I could hire a __________ to do your job!"
  "My next Velocity talk is called \"__________ops\""
  "The RCA for the global outage was __________ compunded by __________."
  "I was hired to maintain this 20 year old script that runs our critical __________ infrastructure."
  "Amazon Elastic __________"
  "I know we use __________, but I wrote this critical program in __________."
  "I'll just have Ops spin up a couple of __________ environments."
  "I'm writing my next IRC bot with __________."
  "I cannot wait until someone makes a __________ cluster out of these."
  "C will finally be displaced by __________."
  "We don't need to worry about __________, we're using MongoDB."
  "Why is __________ better than Hadoop?"
  "FC067: __________"
  "Oh, the __________ is just a hack to get the __________ to run."
  "How do I even __________?"
  "__________ all the things!"
  "ERROR: __________ NOT FOUND"
  "We don't need backups, we've got __________."
  "Fixing your father's computer with __________."
  "It's always a __________ DNS problem."
  "__________ with this one weird trick."
  "__________ isn't new, we used to do it in the '70s on mainframes."
  "Puppet is better than Chef because __________ and __________."
  "How is __________ better than __________?"
  "Learn __________ the hard way."
  "Vagrant up __________."
  "Bollocks up __________."
  "You can fix  __________ with __________ ."
  "We took the plunge and rewrote __________ in Go."
  "Implementing __________ should take only 2 lines of code."
  "Good enough for __________ work."
  "Yeah, but can it run __________?"
  "Security through __________."
  "__________? You can safely ignore that. Usually."
  "__________ isn't cool. You know what's cool? __________."
  "I made a new editor, better than vim and emacs. It's called __________."
  "640k should be enough for __________."
  "__________ worked in dev."
  "You can't fix __________."
  "How hard could it be to port Linux to __________."
  "I just finished working on my rocket powered __________."
  "Richard Stallman will kill you with his teeth for __________."
  "DB tuning with __________."
  "Can anyone help me get __________ running on Cisco IOS?"
  "Real __________ don't use __________."
  "__________ on XEN."
  "Please bring back __________. You broke my workflow."
  "I cut-and-pasted this StackOverflow code for my __________."
  "I'm just finishing up my manifesto on __________."
  "r/__________."
  "We can discuss __________ at the stand-up meeting."
  "A Beowulf cluster of __________."
  "We're demoing __________ for __________ at SXSW."
  "I aliased __________ to git __________."
  "10 PRINT \"__________\"; GOTO 10"
  "alt.binaries.__________"
  "It is completely dark. You are likely to be eaten by a __________."
  "Conway's Game of __________."
  "Next year I'll start learning __________."
  # "s/__________/__________/g" # TODO: Fix this.  Its awesome, but doesn't work.
  "__________ is the newest gTLD."
  "Works on my __________."
  "One does not simply __________."
  "Sorry, you'll need to open a ticket before we can __________."
  "ln -s __________ __________"
  "__________ is dead."
  "__________. WTF does that even mean?"
  "Make it __________."
  "__________coin"
  "__________ computing"
  "grep __________ | mail __________"
  "__________ just got pwned."
  "It's like __________, but with __________ and list comprehensions."
  "Software defined __________."
  "I don't have any UNIX Beards in stock, but we do have __________."
  "Amazon does __________, why can't we?"
  "__________ nagios"
  "I can't believe you're still using __________."
  "/dev/__________: Device is busy"
  "__________, You don't exist, go away!"
  "I tried __________, the doctors say I'll never walk again."
  "git --__________"
  "The __________ Public License."
  "__________ begins with __________."
  "Couldn't we use __________?"
  "__________ would be so much better if we rewrote it in Clojure."
  "So I just found __________ and __________ running in a screen session."
  "Why is root running __________ under tmux?"
  "Instead of installing __________, what if we just used __________."
  "I need a webinar like I need __________."
  "Fuck it, time to break out the emergency __________."
  "On the plus side, we finally got rid of __________."
  "__________ thought leader."
  "Fuck it: __________ looks good to me."
  "It looks like you're trying to __________. Can I help?"
  "zsh: command not found: __________"
  "How did __________ ever work?"
  "Whoops, I thought that method was supposed to __________ the __________."
  "I thought you said __________ was secure?"
  "git: You are in detached __________ state."
  "Why don't we just fork __________?"
  "Network dropped connection because of __________."
  "We turned off __________ and everything magically got better."
  "I found a Samba share full of __________."
  "__________. What could go wrong?"
  "Install __________."
  "I installed __________ by accident."
  "Read-eval-__________-loop."
  "We should try it with an actual __________."
  "Is __________ something we need to optimize for?"
  "Hack __________ into redis."
  "__________ considered harmful"
  "Never __________ before a demonstration."
  "The __________ is used when the CPU is on fire."
  "modperl can be used to implement __________."
  "__________ runs Ruby as root."
  "Larry Wall trained as missionary then __________."
  "Listening to the fans in the server farm leads to __________."
  "__________ and __________ are rumoured to be working on a python module for a helicam."
  "A lot of disk space is needed for __________."
  "automagical __________"
  "Whoever made the unscheduled change to production on Friday will be forced to use __________."
  "Never question the __________."
  "I can't wait until we no longer use __________."
  "I bet if we switch to __________ it will just work."
  "__________ has just discovered __________.  We're doomed."
  "A neckbeard made of __________."
  "False alarm, it was just __________ running __________."
  "__________ running on a rack of __________."
  "No, __________ being hopelessly broken is NOT an emergency."
  "Our new startup is the __________ for __________."
  "__________ make me a sandwich."
  "__________ over IP"
  "__________ is a hardware problem."
  "I AM working, I'm waiting for __________ to finish."
  "The first rule of __________ is: You do not talk about __________."
  "Google Analytics says 100% of my website visitors are __________."
  "__________ will never get you a job at Microsoft."
  "4chan.org is powered by __________."
  "We can __________ just like Netflix."
  "__________ is how I resolve all merge conflicts."
  "Why does someone keep re-implementing system utilities in __________?"
  "Remember when you told me to tell you when you were acting __________ and __________? You're doing it now."
  "Our only hope at recovering the data is __________."
  "__________: the gift that keeps on giving."
  "__________ has been killed with fire.  My work is done here."
  "Problem exists between keyboard and __________."
  "100% government funded __________!"
  "The __________ certification program."
  "I just finished writing an API for __________."
  "__________ is a batch command to shut the heck up."
  "__________.  Failed to cache catalog."
  "Everytime you allocate you have to __________ when you're done."
  "Sorry, I'm all out of __________-fu."
  "90% of everything is __________."
  "Given enough __________, all bugs are __________."
  "__________ never use on git"
  "The first 90% of development is __________. The second 90% is __________."
  "When you logged in there, did you see a __________ that said __________?"
  "Purely numeric hostname and not a __________ -----rejecting!"
  "I'm pretty sure __________ isn't thread safe..."
  "We don't have to worry about CAP Theorem because of __________."
  "I don't always test my code, but when I do I do it in __________."
  "Those who don't understand __________ are condemned to reinvent it, poorly."
  "The NSA is really interested in our latest project: __________."
  "Just change the __________, it'll be fine."
  "Yeah, you need to modprobe __________ to get it to recognize the __________."
  "Oh, we're devops! We have __________ in the office, but only the DBA can touch it."
  "We're spending 20% of this sprint doing __________."
  "__________ found a new OpenSSL vulernability people are calling __________."
  "Management has changed all our job titles to __________."
  "while true; do __________; done"
  "The consultant we hired is certain that __________ will drastically increase the performance of __________."
  "Could you just push this update for __________?  It should be a no-op."
  "If we're all going to get fired, let's get fired for __________."
  "We can't pay you, but we can offer __________ in compensation."
  "A soiled napkin with the contents of __________ scribbled on it."
  "Who thought that __________ was a good idea?"
  "It's not the recommended configuration to use __________ with __________, but it's in production right now."
  "We wrote our own build tool based on __________."
  "I've received a Microsoft MVP award for __________."
  "We rewrote __________ in __________."
  "The ticket to install __________?  I deletegated it."
  "Some people, when confronted with a problem, think \"I know, I'll use __________.\" Now they have two problems."
  "Artisanally crafted __________."
  "The backups are fine, but the restore process is __________."
  "I can't believe QA filed a bug for __________."
  "The __________ that ops provides developers."
  "Oracle is proud to announce that the next edition of Java features __________."
  "Move __________ and break things."
  "__________: ci or not ci?"
  "I opened the server cabinet and it was full of __________."
  "Crossing __________ could lead to total protonic reversal."
  "The next big thing is __________."
  "I once made a robot around the concept of __________."
  "I __________ your stupid issue!"
  "Nine circles of __________ hell."
  "I once wrote an NPM module called __________.js"
  "I asked the contractor for __________ and they delivered __________."
  "Welcome to Programming 101, our first topic will be __________."
  "The Genius Bar recommends you try __________."
  "Post-modern coding is defined by __________."
  "__________ | sudo sh"
  "__________ has been put under the WTFPLicense."
  "Here's __________, as I promised."
  "I'd like __________, __________, and a Fluttershy."
  "It transpiles __________ to JavaScript."
  "Only the Enterprise Edition‚Ñ¢ has __________."
  "__________ is a proof of concept and an actual __________ __________."
  "The trouble with kids these days is __________."
  "__________ is the new Stalinism."
  "__________ for the win!"
  "__________ is the new __________."
  "Don't read the __________ or the __________ pages."
  "With __________, you write once, run nowhere."
  "__________ discontinued support for the Linux version."
  "A manager told me I couldn't remove our dependency on __________, but I got around it with __________."
  "__________ implements every single standard for __________.  Poorly."
  "Just think of the Internet as __________."
  "Would you like __________ with that?"
  "__________? We've got that."
  "It took over 40 hours to document __________. "
  "//TODO: __________."
  "npm install __________."
  "Circular imports import __________. "
  "A firewall rule for __________."
  "__________ is why the jDBA thought it might be time to go to #mysql on freenode"
  "__________ is the only reason the jDBA survived typing rm -rf /"
  "__________ exists?"
  "It's like __________ on __________."
  "I came here to drink milk and __________, and I've just finished my milk."
  "End-to-end __________."
  "__________ will help you remember to sanitze your database inputs."
  "Fascists cannot stand __________."
  "RTFM so you can __________."
  "__________ took EBS down again today."
  "I ssh'd into a server running __________ and promptly noped the fuck out of there."
  "__________, the final solution."
  "We're running __________ in production?!"
  "__________ has root access."
  "We don't have enough package managers, said __________."
  "__________ is more reliable than __________."
  "Of course culture is important to us, that's why we have __________."
  "I'd trust all my stuff to __________."
  "My __________ for a __________."
  "Nice __________ I'll take it."
  "@horse__________"
  "Such __________. Wow."
  "That's funny, did __________ used to be here?"
  "I can't believe you improved __________ by deleting __________."
  "The only thing more dangerous than __________ is a programmer with __________."
  "1. __________     2. __________    3. Profit."
  "Monads are easy! Just think of them as __________"
  "__________: powered by the cloud."
  "I upload my worm to __________"
  "#!/bin/__________"
  "make __________ && sudo make install && cowsay yay"
  "I bet the person who wrote this uses __________."
  "I'm not __________, my code is compiling."
  "Don't worry, we have unit tests for __________."
  "As a __________, I want __________."
  "The only non-conformance in this year's audit was __________."
  "We're blaming interns for the __________."
  "__________ is my favourite thing about __________."
  "I wish that we had more __________ in our office."
  "I've once been so drunk that __________ actually made sense."
  "To understand __________ you must first understand __________."
  "__________ @ 127.0.0.1 -p __________"
  "__________? You mean __________!"
  "__________ is coming out of stealth mode."
  "__________ ate all my memory"
  "__________ is always a good practice."
  "Don't mind me, I'm just practicing __________."
  "We accidently the whole __________."
  "It's easy! Just run __________."
  "I assure you __________ is secure!"
  "Our backup policy is __________."
  "pacman -Syu accidentally __________ everything"
  "I saw a high availability blog post about __________."
  "We didn't think anyone was using __________!"
  "Do you wanna build a __________?"
  "IBM just created JSONxx to encapsulate JSON in XML in __________."
  "I never truly understood eXtreme programming until I encountered __________."
  "The Agile Manifesto taught me to pick __________ over __________."
  "__________ should be a singleton!"
  "Flash is dying because __________."
  "Neo, the matrix has one fatal flaw, you must find __________."
  "Javascript is the best language ever, thanks to __________."
  "Last night while drunk, the W3C declared __________ as a new web standard."
  "North Korea finally launched warheads because of __________."
  "Last night I accidentally ran sudo chmod -R 777 /. I just blamed __________."
  "During the lunch break I like to think about __________."
  "Nobody will value your work if you don't use __________."
  "__________, because scientists don't know how to code."
  "__________, because Knuth."
  "The entire system failed because of __________."
  "The meeting between Europe and the USA was cancelled because of __________."
  "We missed the launch window due to confusion from __________."
  "__________ wasted thousands of dollars."
  "No one can authenticate because of __________."
  "__________ caused the servers to melt down."
  "__________ invalidated all the assumptions in our monitoring system."
  "__________ because __________."
  "CAMS is outdated because of __________."
  "__________: Easy one-step installation"
  "__________, because even the hobos of Market Street need a cluster scheduler."
  "We need to update the __________."
  "It's cool, they use __________ at Etsy."
  "Code as __________."
  "__________ is how the cloud works."
  "How does it look in Opera?"
  "The __________ shell"
  "__________ in haskell"
  "Say __________ one more time; I dare you!"
  "The cloud runs on __________, with a bit of __________."
  "__________, because who needs monitoring. "
  "This problem can be completely solved with __________ implemented in __________."
  "__________ vs __________... FIGHT!"
  "I regret to inform you your weekend has been revoked due to __________."
  "All alerts go to __________, which is handled by __________."
  "__________, it's the new pink."
  "I've got 99 problems but __________ ain't one."
  "140 characters is just enough to explain __________."
  "__________ all the way down."
  "__________ continuously spawns zombie processes."
  "Elliptic-Curve Diffie-Helman breaks against __________."
  "Why isn't my script working? Oh. __________."
  "ITIL best practices suggest __________ is the next step."
  "We would have gotten the funding, if only our slide deck included __________."
  "Have you tried __________ and __________?"
  "I left __________ in the server room."
  "I stuck my hand in a sysadmin's beard and pulled out __________."
  "Before exiting, the program kills __________."
  "Cookbooks containing __________ have been known to cause __________."
  "Once we added __________ to the firewall rules, __________ worked perfectly."
  "My pre-commit hook replaces tab characters with __________."
  "I was up all night debugging __________."
  "Error: insufficient __________"
  "The Product Team handed me a spec, they want __________ in the next release of __________."
  "The malware came from an infected ad on __________.com"
  "Killing child processes releases resources back to __________."
  "That regular expression is designed to match __________ but not __________."
  "The vendor solution didn't have log aggregation, but it did have __________."
  "Our custom log rotation scripts have the added feature of __________."
  "This year, Cross-Site Request Forgery was knocked out of the OWASP Top 10, and replaced by __________."
  "Nagios sucks, let's replace it with __________."
  "My pull request was rejected because it contained __________."
  "My stacktrace revealed __________."
  "Chef encountered an error attempting to create __________."
  "Since the 1950s, engineers have been striving toward a more effective means of generating __________."
  "Our code was efficient, except for the module containing __________, which was slower than __________."
  "I need to re-munge the CSV, replacing the commas with __________."
  "We strive for continuous deployment, continuous delivery, and continuous __________."
  "Data-driven decisions are to be replaced with __________."
  "The ruby gem is useless, it's a lesser implementation of __________."
  "Windows ME had a service pack that solved the problem of __________."
  "Lennart Poettering's latest project is __________."
  "__________ is the quickest way to identify what is burning in the server room."
  "Oh, we store all our docs in __________."
  "I accidentally __________ the whole database."
  "It's not a bug it's a __________."
  "What killed the mood at E3?"
  "To replace camelCase, the new C++ standards mandate variables be named using __________."
  "I'm sorry __________ isn't numberwang."
  "I'm sorry __________ isn't wangernum."
  "__________ became self aware and kidnapped the sysadmins."
  "That's the first time I've ever seen ProGuard used to obfuscate __________."
  "Every day at work I implement __________ and my mother still tells her friends I \"do computers\"."
  "That's the first time I've ever seen comments written in __________."
  "It's not a problem, I'll just __________ it later."
  "I, for one, welcome our new __________ overlords."
]

white_cards = [
  "the Cult of Mac"
  "developers"
  "fuckedcompany.com"
  "Git"
  "Golang"
  "growth hacking"
  "Hacker News"
  "Larry Ellison"
  "leaky abstractions"
  "meritocracy"
  "MongoDB"
  "Node.js"
  "NPM"
  "Pareto Inefficient Nash Equilibriums"
  "posting on Etsy's codeascraft blog"
  "Python"
  "Python datetime module"
  "rebasing the entire fucking repo"
  "recruiter fail"
  "Ruby"
  "running out of IPv4 addresses"
  "sysadmins"
  "the Stanford of Canada"
  "thought leadership"
  "Twitter"
  "Unicode errors"
  "unknown source in your stack trace"
  "waiting for console.aws.amazon.com"
  "women in tech"
  "yet another package manager"
  "Our Release Engineer"
  "OpenSSL"
  "Heartbleed"
  "the NSA"
  "O'Reilly"
  "Edward Snowden"
  "Google"
  "Magic Spray"
  "web scale"
  "functional programming"
  "stack trace generator"
  "\"PHP? Oh dear god why?!\""
  "SVN"
  "Perl 6"
  "COTS Shareware"
  "2400 baud modem"
  "a squirrel with a taste for fiber"
  "zombie processes"
  "CAP Theorem"
  "snowflake server"
  "a Cisco router with a flaky chip"
  "NullPointerException: null"
  "Apache 1.2 running as root"
  "more buzzwords than you can shake a scrum at"
  "it better not have, why wouldn't you text"
  "VisualBasic DLLs"
  "a JAR full of spaghetti"
  "an epic caffeine bender"
  "a WSDL from 2003"
  "the Sales & Marketing department"
  "business logic in PowerPoint slides"
  "/var/log symlinked to /dev/null"
  "hypervisors running hypervisors running hypervisors"
  "an angry badger with an electromagnet on its back"
  "a shared root password"
  "private keys in /var/www"
  "parsing HTML with regex"
  "a 3.5\" floppy disk"
  "an untested restore process"
  "a cron job that reboots the server every 5 minutes"
  "Apache Zookeeper on a 286"
  "sadness as a service"
  "cloud-based business strategy"
  "Cloud 2.0"
  "the next Y2K"
  "an army of chaos monkeys, all carrying flamethrowers"
  "a CORBA service written in Ada which communicates using JSONx"
  "a home-rolled systemd replacement"
  "a custom kernel with Frontpage Extensions installed"
  "a mobile web 2.0 RIA"
  "agony-driven development"
  "being acquired by Oracle"
  "catastrophic failure as a service"
  "10,000 Nagios alerts per second"
  "a global write lock"
  "75-tier architecture"
  "hand-crafted artisan x86 assembly code"
  "the world's only fully-functional ROFLcopter"
  "a proof that P=NP written in BASIC"
  "an Exchange email loop"
  "a Volker-Craig terminal"
  "a self-aware PHP script"
  "a 500-megabyte UDP packet"
  "the last remaining Multics server on Earth"
  "a Null-modem cable"
  "a turducken made entirely of bash scripts"
  "write-only code"
  "PagerDuty configured with a random number generator"
  "Netscape Navigator 3.2 support"
  "dd"
  "a Pi√±ata full of error messages"
  "mutation of immutable data"
  "Maven downloading the entire internet"
  "continuous disintegration"
  "IE6"
  "Scrum Master"
  "Magic Smoke"
  "done done"
  "tech debt day"
  "log shipping"
  "uucp"
  "4chan party van"
  "Adderall"
  "Tcl"
  "NoOps"
  "an angry whale shitting containers"
  ":(){ :|:& };:"
  "too big data"
  "freebasing caffeine"
  "mainlining caffeine"
  "fat fingered"
  "half open TCP connections"
  "Steve Ballmer wielding a battleaxe"
  "a 50k line Bash script that's achieved self awareness"
  "Gigadevops"
  "enterprise grade Bash scripts"
  "agile"
  "a pink sombrero and a fifth of tequila"
  "a simple 15 level Hiera hierarachy"
  "lolscale"
  "CouchDB"
  "GeoCouchDB"
  "high availability"
  "Map-Reduce"
  "\"web scale?\""
  "Erlang"
  "a non-ironic BSOD"
  "ntpdate"
  "Systemd"
  "12 factor application"
  "fail early, fail often"
  "regex"
  "a violation of the most basic engineering principles"
  "the BOFH"
  "a water buffalo"
  "a routing loop"
  "a queue with no consumers"
  "Bitcoin mining"
  "a firewall full of holes"
  "an uncontrollable deluge of emails"
  "I heard about it on hacker news"
  "Ycombinator"
  "a jailbroken iPad"
  "Vagrant"
  "Nokogiri Gem"
  "Docker"
  "a \"MRW\" animated gif"
  "$HOME/.gem"
  "a posting on Craigslist \"internet engineers\" jobs forum"
  "ssh in a for loop"
  "a cold cup of coffee"
  "destroying your tools with your tools"
  "UTF-9"
  "a dozen vendor t-shirts"
  "unlimited data plan"
  "UTF-7"
  "out-of-band access"
  "sudo rm -rf /"
  "kill -9"
  "a series of tiny shellscripts"
  "Dogecoin"
  "kernel panic"
  "Hugops!"
  "lolcats"
  "culture"
  "percussive maintenance"
  "IE 7 Support"
  "Hangops"
  "Unix philosophy"
  "trying to install MongoDB on AIX 3"
  "a server rack full of crushed dreams"
  "Monads"
  "silos"
  "elastic load balancers"
  "RFC1178"
  "full-stack developer"
  "Andrew Clay Shaffer"
  "Jordan Sissel"
  "a new printer"
  "a potato"
  "Office Space"
  "Git blame"
  "\"Developers! Developers! Developers! Developers!\""
  "your account"
  "single stepping through the kernel"
  "de-linting source code"
  "significant whitespace"
  "a series of tubes"
  "secret sauce"
  "\"# What is this used for?\""
  "regular expressions"
  "\"# FIXME: For now, just don't validate\""
  "ASAP"
  "Nagios"
  "the Goddamn CDN"
  "authentication and authorization"
  "a cluster of applications on a cluster of servers"
  "beating the server into submission with your bare hands."
  "read-only Fridays"
  "r/sysadmin"
  "distributed computing"
  "sprint planning"
  "merge conflicts"
  "unplugging a server and waiting to see who complains"
  "\"THE MAGMA PEOPLE ARE WAITING FOR OUR MISTAKES!\""
  "a tiny ounce of knowledge"
  "too big to fail"
  "NoQA Movement"
  "a few instances"
  "operations hipster"
  "cowboy developer"
  "cubism farm"
  "HipChat"
  "an IRC bot written entirely in sed"
  "(‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª"
  "works for me"
  "a torrent of Torrenters torrenting"
  "COBOL"
  "in b4 FIRST"
  "Donald Knuth"
  "rebooting all the things"
  "running Openstack in production"
  "the Berkshelf way"
  "DNS"
  "SIGHUP"
  "animated GIF"
  "PC LOAD LETTER"
  "automate"
  "delightful"
  "cache"
  "proxy"
  "an online book seller"
  "dust bunnies"
  "Pete Cheslock"
  "networking"
  "a sad log with a mustache"
  "blue screen Of death"
  "ISO 8601"
  "Daniel J. Bernstein"
  "Linus Torvalds"
  "Broadcom chipset"
  "Moe"
  "that XKCD comic about sysadmins"
  "iso 8859"
  "RFC 1149"
  "a pimply faced youth with nothing to lose"
  "Theo de Raadt yelling at newbs"
  "hate driven development"
  "Lotus123"
  "IPSec"
  "hackathons"
  "GNU/Linux"
  "ZeroVM"
  "stringing cloudtobutt.pl into postfix"
  "ZeroMQ over SSH"
  "SQLite"
  "LevelDB"
  "leap second bug"
  "the fucking JVM"
  "continuous deployment"
  "Tor"
  "bash"
  "numactl"
  "zsh"
  "standing around outside on the streets of SOMA with an overheating laptop drunk while fixing your god damn Saturday night deployment."
  "vegan friendly init scripts"
  "committing from the bar"
  "servers that follow daylight savings time"
  "rolling Grubhub into the build failed script"
  "command line options"
  "temporary hotfixes"
  "jsLinux"
  "SIGKILL"
  "your private browsing history"
  "top"
  "arguing over the internet"
  "year 2038"
  "dd"
  "pdisk"
  "rsync"
  "CFLAGS"
  "cowsay"
  "profanity in the git log"
  "Gentoo"
  "the CEO"
  "ping pong"
  "Dennis Ritchie"
  "PAM happy hour"
  "complex systems usually operate in failure mode"
  "FAT32"
  "winsock"
  "fork() on Windows"
  "runlists"
  "sudo"
  "echo shell_exec(\"sudo ./smbkill \".escapeshellcmd($_GET['kill']).\" 2>&1\");"
  "kill -9 -1"
  "curl 4chan | sudo sh"
  "HTML9 Responsive Boilerstrap JS"
  "neckbeards"
  "a certified SCRUM Master"
  "bus error"
  "git reset --hard origin/master"
  "forcing push to master"
  "Paxos"
  "LogFiles\W3SVC1"
  "a German installation of Windows NT4"
  "curl | sh -c"
  "OpenLDAP"
  "Spot Instances"
  "those ksh scripts"
  "/cgi-bin/php5"
  "a $60 QNAP and some positive thinking"
  "raspberryPI"
  "Windows ME"
  "@echo off"
  "Active Directory"
  "conflict minerals"
  "continuous incineration"
  "the gentle sound of weeping drifting from the server room"
  "eventual consistency"
  "Microsoft¬Æ Azure"
  "pinging the broadcast address"
  "that moment when you realize CTRL-Z cannot save you"
  "127.0.0.1"
  "Ethernet"
  "IPv6"
  "re-writing deployment scripts at 2 AM"
  "piping /var/log/messages to Twitter"
  "a pseudorandom number generator"
  "an outage window"
  "Sentinel System Driver"
  "fpm"
  "catastrophic cancellation"
  "termcap"
  "f00d"
  "one giant SPOF"
  "Richard Stallman's neckbeard"
  "phpMyAdmin"
  "righteous anger"
  "/etc/hosts"
  "CEOs with root access"
  "automagic metaprogramming"
  "re-implementing TCP over UDP"
  "segfault"
  "#define BEGIN  {"
  "Microsoft Access over a WAN"
  "git submodules"
  "Haskell"
  "functional reactive"
  "Paxos"
  "memegen"
  "Flynn"
  "eventual persistence"
  "Jenkins"
  "bingo balls"
  "mechanically recovered turkey"
  "ChatOps"
  "Scala"
  "WONTFIX"
  "Trello board"
  "mechanically recovered data"
  "Friday afternoon deployment"
  "YoloDB"
  "piping random scripts from the internet into bash"
  "(‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª"
  "post-mortems"
  "Github selfies"
  "production deployments that depend on GitHub"
  "RFC 2324"
  "your code featured on The Daily WTF."
  "optimistic transactions"
  "Webscale"
  "cats"
  "ponies"
  "your mum"
  "using Brain Fuck in production"
  "picking the best color to paint your bike shed"
  "server cages"
  "copy-on-write"
  "deduplication"
  "LART"
  "BOFH"
  "program management"
  "product managers"
  "the Ballmer Peak"
  "0xDEADBEEF"
  "a coked-up tech recruiter"
  "a contractor that tells you it was a real learning experience"
  "RTFM"
  "a 1996 Java applet"
  "a virtual machine running a virtual machine until it brings on the Singularity"
  "ops doing dev = technical debt"
  "#And right here, we'd like a miracle."
  "sparkly devops princess"
  "Patrick Debois"
  "git merge --force"
  "a series of tubes"
  "a literal cluster fuck"
  "the library that imports all other libraries"
  "the tech lead's shitty pet project"
  "an entirely commented out file"
  "a constructor for RandomThing"
  "circular imports"
  "a pull request with a winking smiley ;)"
  "syntactic sugar coma"
  "former employees who still have admin access to live production servers"
  "the ib_logfiles"
  "the mysql client"
  "Paul Graham"
  "the much neglected IPv5"
  "cron jobs that edit cron jobs"
  "snail scale"
  "testing positive for mongonucleosis"
  "PEBKAC"
  "ReiserFS"
  "/dev/null"
  "Little Bobby Tables"
  "solar flares"
  "global warming"
  "short stroking"
  "reticulating splines"
  "RAID 3 SSD cluster"
  "re-implementing TCP over TCP"
  "mixed endianness"
  "OAuth"
  "traceroute"
  "rockstar"
  "packet loss"
  "smokeping"
  "losing the root password"
  "works on my machine!"
  "malloc"
  "buffer overflow"
  "\"StackOverflow is offline?!\""
  "server logs"
  "penetration test"
  "deploying on a Friday afternoon"
  "Quipu"
  "too many authorization failures"
  "two single quotes"
  "kremvax"
  "the unix epoch"
  "0-day exploits"
  "tribal knowledge"
  "puppet"
  "RHEL4"
  "DevOps Reactions"
  "syntax error"
  "killall -9"
  "pre caffeine typos"
  "banana pi"
  "RAID 0"
  "PIP"
  "PyPi"
  "synergy"
  "dev"
  "Java"
  "geometric distances"
  "out of bounds exception"
  "rm -rf /"
  "hunter2"
  "GCHQ"
  "NSA FOIA request"
  "wat"
  "kanban"
  "Halt and Catch Fire"
  "Ansible"
  "template out"
  "bzero"
  "sendmail"
  "bare metal"
  "Slackware"
  "Bazaar"
  "runit"
  "home-grown monitoring solution"
  "Virident"
  "ifconfig lo down"
  "Arch linux in production"
  "AUR"
  "Btrfs on a 2.6 kernel in production"
  "actually reading the manual"
  "telnetd on the payment tier"
  "the Hungary Games"
  "the GIL"
  "Solaris"
  "SmartOS"
  "Joyent"
  "Big-endian x86"
  "Uncyclopedia.org"
  "Spongebob Squarepants"
  "flux capacitor"
  "toaster on wheels"
  "the previous developer"
  "Debian experimental in production"
  "10 years since last update"
  "HAL"
  "testing in production"
  "the Gang of Four becoming a real gang"
  "shoving the code down the compilers throat with catch statements"
  "legacy code that you're terrified of deleting"
  "that one goddamn line"
  "HTML5 vs Flash"
  "Sudo: make me a sandwich"
  "Java's Syntax"
  "the Travelling Salesman Problem"
  "Subjective C"
  "\"Ubuntu? I have to learn Ubuntu?\""
  "Dell custumer support"
  "the Genius Bar"
  "that goddamn paperclip"
  "laziness, impatience, and hubris"
  "a deleted StackOverflow post"
  "all our code becoming self-documenting because I declared it so"
  "VBScript, the future of software!"
  "the waterfall model"
  "NaN"
  "undefined"
  "an empty int"
  "continous testing"
  "service virtualization"
  "test automation"
  "writing a Perl script to deploy Puppet Enterprise"
  "the OOM Killer"
  "$lastjob"
  "segfault"
  "$i++"
  "tabs not spaces"
  "spaces not tabs"
  "spaces and tabs in the same file"
  "iptables"
  "Fedora Core 9"
  "\LaTeX{}"
  "NumPy"
  "an unmaintained man-page"
  "an old Gentoo installation"
  "TeX"
  "null-pointer"
  "Delphi code from the 1990's"
  "turning it off and on again"
  "a PHP script comprised of shell_exec()'s"
  "a PHP script comprised of exec($_REQUEST['cmd'])"
  "Computer Science III"
  "multiple measurement systems"
  "date formats other than yyyy-mm-dd"
  "12 hour clocks"
  "clocks in a timezone other than UTC"
  "machines not running NTP"
  "using Fahrenheit instead of Celsius"
  "Classic Vi"
  "Mesos"
  "diva designer"
  "sudo chmod -R 777 /"
  "concurrent Javascript"
  "NaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaN Batman!"
  "\"Nazi zombies!!!\""
  "Netscape Navigator"
  "Mosaic"
  "Adobe"
  "Microsoft"
  "Apple"
  "Samsung"
  "a new ultrabook"
  "binaries"
  "scope creep"
  "GitHub"
  "a Monad"
  "Silk Road"
  "--enable-h8"
  "--omg-optimized"
  "--funroll-loops"
  "--disable-instructions"
  "an old Solaris developer"
  "\"This webpage is not available\""
  "Dan Kaminsky"
  "65,536"
  "being marked CLOSED WONTFIX"
  "a datacenter migration"
  "loading the servers in the back of a shady Canadian's truck"
  "the business acumen of the Mormon Church"
  "high latency"
  "sudo !!"
  "Defcon"
  "the training budget"
  "SUID root"
  "regex golf"
  "a Monoid"
  "Slashdot"
  "quantum encryption"
  "JIRA Jr!"
  "rm -rf Russian roulette"
  "errors which disappear in debug builds"
  "javascript webservers"
  "sysadmins sneaking Minecraft on the production server"
  "reporting bugs on IRC"
  "Emacs keyboard shortcuts"
  "DevOps podcasts"
  "Hamachi for VPN"
  "debugging Genetically Programmed code"
  "exchanging childhood memories for 160GiB of storage"
  "Saint IGNUcius"
  "--force"
  "gem native extensions"
  "anti-affinity"
  "multi factor authentication"
  "Python is the new Basic"
  "YAML"
  "cloud-agnostic"
  "Borland StarTeam"
  "\"paralax!\""
  "a Python implementation that's basically just a whole bunch of C preprocessor macros"
  "the empty string language {Œµ} = √ò"
  "idempotence"
  "Chef-client running on OS/2 Warp"
  "@SwiftOnSecurity"
  "Adam Jacob's guitar"
  "PowerShell"
  "clock skew"
  "a good scotch collection at your desk."
  "a 1:1 that goes straight to the bar."
  "a 16 hour incident bridge."
  "something said by a NetEng that you didn't understand."
  "an obscure stack trace"
  "an app with no logging"
  "steering the Titanic with a popsicle stick"
  "a peer that doesn't believe in peer review"
  "Angular js"
  "a former MENSA member"
  "being acquired by Oracle"
  "more bloat than GNU code"
  "Emacs pinky problems"
  "arguing over Java or C#"
  "best practices"
  "programming drunk"
  "custom Nagios scripts"
  "ITIL"
  "branded hoodies"
  "angel investors"
  "series B funding"
  "a noose made out of cat 5 cable"
  "a kernel hacker's beard"
  "the reaping of child processes"
  "nginx"
  "the outsourced IT department"
  "a NSFW MOTD file"
  "ASCII art"
  "bugzilla"
  "boto"
  "malicious code"
  "the return of the Y2K bug"
  "a highly sophisticated regular expression"
  "a mint-in-box AOL trial CD"
  "log aggregation"
  "the OWASP Top 10"
  "water-scrum-fall"
  "yet another attempt at re-writing Nagios"
  "infinite loops"
  "bareword variables"
  "rubocop"
  "a project of Stuxnet-level complexity"
  "Postgis"
  "Terraform"
  "AWK"
  "Greybeards"
  "Database antipatterns"
  "Cat5 'o 9 tails"
  "USB Type-C"
  "just plain text"
  "HTTP 418: I'm a teapot"
  "haveToMakeMyOwnArrayIsEmptyMethodBecauseCrappyJavaDoesNotHaveIt()"
  "a client with no servers"
  "rereading code of last night"
  "debugging 500 lines of code per method. Average."
  "localhost"
  "it doesn't happen on my machine"
  "unit testing randomization"
  "dropping tables on a Friday"
  "literally driving development"
  "while(true)"
  "using a switch for a boolean"
  "ENUM('Y','N');"
  "Mac OSX"
  "replacing all dev machines with Raspberry Pis"
  "redirecting www to dev"
  "the Cloud"
  "1337"
  "minorities in tech"
  "another Wordpress vulnerability"
  "a Raspberry Pi botnet"
  "DDoSing 127.0.0.1"
  "low orbit ion cannon"
  "script kiddies"
  "hack forums"
  "/r/talesfromtechsupport"
  "@sadserver"
  "Little Bobby Tables"
  "downtime"
  "Unixbeards"
  "excessivelyLongVariableNames"
  "a parent killing its children"
  "zombie processes"
  "commenting every line of code"
  "DEFCON"
  "Richard Stallman"
  "emojis as identifiers"
  "trolling the sysadmins"
  "running Java 6"
  "UNDO UNDO UNDO"
  "Hypertext Coffee Pot Control Protocol"
  "IP Over Avian Carriers"
  "SONET to Sonnet Translation"
  "IP Over Avian Carriers with QoS"
  "SCCS"
  "Infinite Monkey Protocol Suite"
  "National Security Letter"
  "Hyper Text Coffee Pot Control Protocol for Tea Efflux Appliances (HTCPCP-TEA)"
  "NSA (No Secrecy Afforded) Certificate Extension"
  "scenic routing for IPv6"
  "Really Explicit Congestion Notification (RECN)"
  "Internet Explorer"
  "Silk Road"
  "the Tor Network"
  "sudo rm -rf /"
  "COBOL"
  "/dev/random"
  "Windows ME"
  "Windows for Workgroups"
  "M-x dwim"
  "===== operator"
  "kibo"
  "Elvish"
  "Klingon"
  "Na'vi"
  "XSLT"
  "a blue box"
  "APL"
  "Snobol"
  "Bogosort"
  "the Jargon File"
  "AI-complete"
  "BCPL"
  "?= operator"
  "12 hamsters"
  "Selenium"
  "a server with no client"
  "trusting user input"
  "Guru Meditation"
  "unexpected T_PAAMAYIM_NEKUDOTAYIM"
  "402: Payment required"
  "treating warnings as errors"
  "turning up to work still drunk from yesterday"
  "private members"
  "EgoDB"
  "LISP"
  "r/talesfromtechsupport"
  "git push --force"
  "a pi stack"
  "PBKAC"
  "Reddit"
  "a poorly abbreviated function name"
  "#nosemver"
  "the .sucks Domain"
  "the <blink> tag"
  "the <marquee> tag"
  "CTRL - C! CTRL - C! CTRL - C!"
  "Greg Case"
  "updating build.gradle"
  "GIT_HISTORY_ALL_FUCKED_UP_IN_HERE = TURBO"
  "Cowboy Neal"
  "insensitive clod"
]

Util = require "util"

class DahGameStorage

  constructor: () ->
    @data = {}

  # Dealer functions ###########################################################
  getDealer: (room) ->
    dealer = undefined
    for name, player of @roomData(room)['users']
      if player['isDealer']
        dealer = player
    dealer

  setDealer: (player, room) ->
    for name, data of @roomData(room)['users']
      if player == name
        data['isDealer'] = true
      else
        data['isDealer'] = false

  isSenderDealer: (name, room, isDealer) ->
    if isDealer?
      @userData(name, room)['isDealer'] = isDealer
    else
      @userData(name, room)['isDealer']

  # Black card functions #######################################################
  getBlackCard: (room) ->
    @roomData(room)['blackCard']

  setBlackCard: (room, blackCard) ->
    @roomData(room)['blackCard'] = blackCard

  # Player card functions ######################################################
  getAllPlayedCards: (room) ->
    @roomData(room)['combos']

  getCards: (name, room) ->
    @userData(name, room)['cards']

  getCardsPlayed: (name, room) ->
    @roomData(room)['combos'][name]

  setCards: (name, room, cards) ->
    @userData(name, room)['cards'] = cards

  setCardsPlayed: (name, room, completion) ->
    @roomData(room)['combos'][name] = {'completion': completion}

  # Player score functions #####################################################
  getScore: (name, room) ->
    @userData(name, room)['score']

  scorePoint: (name, room) ->
    @userData(name, room)['score']++

  # Misc functions #############################################################
  clearRoomData: (room) ->
    @data[room] = {}

  clearRoundData: (room) ->
    delete @data[room]['blackCard']
    delete @data[room]['combos']

  # Helper functions ###########################################################
  roomData: (room) ->
    result = @data[room]
    if (!result || !(result['users'] || result['blackCard']))
      result = {'users': {}, 'combos': {}}
      @data[room] = result
    result

  userData: (name, room) ->
    userData = @roomData(room)['users'][name]
    if (!userData)
      userData = {'name': name, 'cards': [], 'score': 0, 'isDealer': false}
      @roomData(room)['users'][name] = userData
    userData

dahGameStorage = undefined

module.exports = (robot) ->

  dahGameStorage = new DahGameStorage()

  robot.respond /devops card( me)?/i, (message) ->
    message.send randomCompletion()

  robot.respond /devops (draw )?black card/i, (message) ->
    blackCard = drawBlackCard()
    room = getRoomName(message)
    if dahGameStorage.isSenderDealer(getSenderName(message),room) && !dahGameStorage.getBlackCard(room)
      dahGameStorage.setBlackCard(room, blackCard)
      message.send "Setting black card to:\n#{blackCard}"
    else
      # Uncomment the next line for local testing
      # dahGameStorage.setBlackCard(room, blackCard)
      message.send blackCard

  robot.respond /devops reveal cards/i, (message) ->
    if dahGameStorage.isSenderDealer(getSenderName(message), getRoomName(message)) && dahGameStorage.getBlackCard(room)
      playedCardInfo = dahGameStorage.getAllPlayedCards(getRoomName(message))
      players = []
      response = []
      for player, play of playedCardInfo
        players.splice(randomIndex(players), 0, player)
      for player in players
        response.push("#{_i+1}) #{playedCardInfo[player]['completion']}")
        playedCardInfo[player]['index'] = _i+1
      message.send response.join("\n")
    else
      dealer = dahGameStorage.getDealer(getRoomName(message))
      if dealer
        message.reply "only the dealer can reveal the combinations."
        message.send "@#{dealer}, is it time for the big reveal?"
      else
        message.reply "There is no dealer currently.  Perhaps it's time to start a game?"

  robot.respond /devops (what is (the )?)?current black card/i, (message) ->
    blackCard = dahGameStorage.getBlackCard(getRoomName(message))
    if (blackCard)
      message.send blackCard
    else
      dealer = dahGameStorage.getDealer(getSenderName(message), getRoomName(message))
      if (dealer)
        message.send "There is no current black card.  Maybe @#{dealer.name} should draw one?"
      else
        message.reply "There isn't a black card currently.  Maybe you should start a game?"

  robot.respond /devops ([0-9]+) won/i, (message) ->
    sender = getSenderName(message)
    room = getRoomName(message)
    if dahGameStorage.getDealer(room) && dahGameStorage.isSenderDealer(sender, room) && dahGameStorage.getBlackCard(room)
      playedCardInfo = dahGameStorage.getAllPlayedCards(room)
      winnerIndex = message.match[1]
      players = Object.keys(playedCardInfo)
      if winnerIndex > 0 && winnerIndex <= players.length
        winningPlayer = undefined
        for player, play of playedCardInfo
          if "#{play['index']}" is "#{winnerIndex}"
            winningPlayer = player
        if winningPlayer
          dahGameStorage.scorePoint(player, room)
          dahGameStorage.setDealer(players[randomIndex(players)], room)
          for player in players
            giveUserCards(player, room)
          dahGameStorage.clearRoundData(room)
          message.send "@#{player} won.  #{player}'s score is now #{dahGameStorage.getScore(player, room)}."
          message.send "@#{dahGameStorage.getDealer(room)['name']} is the new dealer."
        else
          message.reply "I couldn't find that card combination.  Have white cards been revealed?"
      else
        message.reply "There were only #{Object.keys(playedCardInfo)} cards played.  Maybe pick one of those?"
    else if !dahGameStorage.getDealer(room)
      message.reply "There is no devops dealer currently.  Maybe you should start a game?"
    else if !dahGameStorage.isSenderDealer(sender, room)
      message.reply "You have to be the dealer to award points.  Stop trying to cheat."
    else if !dahGameStorage.getBlackCard(room)
      message.reply "You haven't drawn a black card yet.  How can you know who won?"

  robot.respond /devops white card/i, (message) ->
    message.send drawWhiteCard(true)

  robot.respond /devops (start )?new game/i, (message) ->
    sender = getSenderName(message)
    room = getRoomName(message)
    dahGameStorage.clearRoomData(room)
    dahGameStorage.isSenderDealer(sender, room, true)
    dahGameStorage.userData(sender, room)['jid'] = message.message.user.jid
    message.send "Starting a new devops game."

  robot.respond /devops (I'm )?join(ing)?/i, (message) ->
    addSenderToGame(message)

  robot.respond /devops (what are )?my cards/i, (message) ->
    cards = getCards(getSenderName(message), getRoomName(message))
    robot.messageRoom message.message.user.name, cards

  robot.respond /devops play card (\d+)( \d+)?( \d+)?/i, (message) ->
    playCards(message)

  robot.respond /devops (who is the )?dealer/i, (message) ->
    dealer = dahGameStorage.getDealer(getSenderName(message), getRoomName(message))
    if dealer?
      message.send "@#{dealer.name} is currently the devops dealer."
    else
      message.reply "There is no devops dealer currently.  Maybe you should start a game?"

# Called directly by robot.respond()s ##########################################
addSenderToGame = (message) ->
  sender = getSenderName(message)
  room = getRoomName(message)
  if (dahGameStorage.isSenderDealer(sender, room))
    response = "You're the currently the devops dealer.  Maybe ask for a black card?"
  else if (!dahGameStorage.getCards(sender, room).length)
    giveUserCards(sender, room)
    response = getCards(sender, room)
  else
    response = "You're already playing.  Do you want to know what devops cards you have?"
  robot.messageRoom message.message.user.name, response

drawBlackCard = ->
  black_cards[randomIndex(black_cards)]

drawWhiteCard = ->
  white_cards[randomIndex(white_cards)]

playCards = (message) ->
  cardIndices = [message.match[1], message.match[2], message.match[3]]
  sender = getSenderName(message)
  room = getRoomName(message)
  cards = dahGameStorage.getCards(sender, room)
  blackCard = dahGameStorage.getBlackCard(getRoomName(message))
  if (dahGameStorage.getCardsPlayed(sender, room))
    cardWord = "card"
    if (blanks > 1)
      cardWord = "cards"
    message.reply "increase your calm.  You've already played your #{cardWord} this round."
  if dahGameStorage.isSenderDealer(sender, room)
    if (blackCard)
      message.reply "you're the currently the devops dealer.  Maybe you should reveal the responses?"
    else
      message.reply "you're the currently the devops dealer.  Maybe ask for a black card?"
  else if cards.length
    if (blackCard)
      blanks = countBlackCardBlanks(blackCard)
      plays = []
      # Get all the cards played
      for index in cardIndices
        if index? && index > 0 && index < 6
          plays.push cards[index-1]
        else if index?
          message.reply "you only have 5 cards in your hand.  You can't play card \##{index}."
          plays = undefined
          break
        else
          cardIndices.splice(index,cardIndices.length - index)
          break
      # Play the cards
      if (plays.length && plays.length == countBlackCardBlanks(blackCard))
        newHand = []
        for card in cards
          if !(card in plays)
            newHand.push card
        dahGameStorage.setCards(sender, room, newHand)
        dahGameStorage.setCardsPlayed(sender, room, getCombinedText(blackCard, plays))
      else if (plays.length)
        verb = "is"
        if (blanks > 1)
          verb = "are"
        message.reply "you specified the wrong number of cards.  There #{verb} #{countBlackCardBlanks(blackCard)} blanks."
        cards.splice(0,0,plays)
    else
      message.reply "you're getting ahead of yourself.  There is no black card in play."
  else
    message.reply "you don't have any cards.  Maybe you should join the game?"

randomCompletion = ->
  black_card = drawBlackCard()
  random_white_cards = []
  blanks = countBlackCardBlanks(black_card)
  for num in [1..blanks]
    white_card = drawWhiteCard()
    random_white_cards.push white_card
  getCombinedText(black_card, random_white_cards)

# Game logic helpers ###########################################################
getCards = (sender, room) ->
  cards = []
  for card in dahGameStorage.getCards(sender, room)
    cards.push "#{_i+1}) #{card}"
  if cards.length > 0
    cards.join("\n")
  else
    "You have no devops cards.  Maybe you should join the game?"

getRoomName = (message) ->
  message.message.room

getSenderName = (message) ->
  name = message.message.user.mention_name
  if (!name)
    name = message.message.user.name
  name

giveUserCards = (sender, room) ->
  cards = dahGameStorage.getCards(sender, room)
  for num in [cards.length..4]
    cards.push drawWhiteCard()
  dahGameStorage.setCards(sender, room, cards)

# Card completion helpers ######################################################
getCombinedText = (black_card, random_white_cards) ->
  black_card_tokens = black_card.split(' ')
  shouldCapitalize = true
  currentWhiteCard = random_white_cards.shift()
  for word in black_card_tokens
    if word.match(/_{10}/)
      if shouldCapitalize
        currentWhiteCard = capitalizeFirstLetter(currentWhiteCard)
      black_card_tokens[_i] = black_card_tokens[_i].replace('__________', currentWhiteCard)
      currentWhiteCard = random_white_cards.shift()
    shouldCapitalize = ".?".indexOf(black_card_tokens[_i].slice(-1)) > -1
  black_card_tokens.join " "

capitalizeFirstLetter = (text) ->
  if text.charAt(0) is '"'
    white_card = text.charAt(0) + text.charAt(1).toUpperCase() + text.slice(2)
  else
    white_card = text.charAt(0).toUpperCase() + text.slice(1)
  white_card

countBlackCardBlanks = (black_card) ->
  (black_card.match(/__________/g) || []).length

# Utility ######################################################################
randomIndex = (array) ->
  Math.floor(Math.random() * array.length)
